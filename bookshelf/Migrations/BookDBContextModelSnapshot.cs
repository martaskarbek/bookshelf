// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookshelf.Model;

namespace bookshelf.Migrations
{
    [DbContext(typeof(BookDBContext))]
    partial class BookDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("bookshelf.Model.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("FirstName")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Surname")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("bookshelf.Model.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Title")
                        .HasColumnType("VARCHAR(70)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("bookshelf.Model.BookUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<Guid?>("BookId")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<Guid?>("BorrowerId")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("BorrowerId");

                    b.HasIndex("UserId");

                    b.ToTable("BookUsers");
                });

            modelBuilder.Entity("bookshelf.Model.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("bookshelf.Model.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("chatId")
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("chatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("bookshelf.Model.ChatUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<Guid?>("chatId")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<Guid?>("userId")
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.HasIndex("chatId");

                    b.HasIndex("userId");

                    b.ToTable("ChatUsers");
                });

            modelBuilder.Entity("bookshelf.Model.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<Guid?>("BookId")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("UserReview")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("bookshelf.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("bookshelf.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("City")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("FirstName")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Photo")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Surname")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("bookshelf.Model.Book", b =>
                {
                    b.HasOne("bookshelf.Model.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("bookshelf.Model.BookUser", b =>
                {
                    b.HasOne("bookshelf.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId");

                    b.HasOne("bookshelf.Model.User", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId");

                    b.HasOne("bookshelf.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Book");

                    b.Navigation("Borrower");

                    b.Navigation("User");
                });

            modelBuilder.Entity("bookshelf.Model.ChatMessage", b =>
                {
                    b.HasOne("bookshelf.Model.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("bookshelf.Model.Chat", "chat")
                        .WithMany()
                        .HasForeignKey("chatId");

                    b.Navigation("Author");

                    b.Navigation("chat");
                });

            modelBuilder.Entity("bookshelf.Model.ChatUser", b =>
                {
                    b.HasOne("bookshelf.Model.Chat", "chat")
                        .WithMany()
                        .HasForeignKey("chatId");

                    b.HasOne("bookshelf.Model.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("chat");

                    b.Navigation("user");
                });

            modelBuilder.Entity("bookshelf.Model.Review", b =>
                {
                    b.HasOne("bookshelf.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId");

                    b.HasOne("bookshelf.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("bookshelf.Model.User", b =>
                {
                    b.HasOne("bookshelf.Model.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
